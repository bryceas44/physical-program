name: Weekly Current-Week Card (ScreenshotAPI)

on:
  schedule:
    - cron: "0 14 * * 1"     # every Monday 14:00 UTC
  workflow_dispatch:          # allows manual run

jobs:
  shoot-week-card:
    runs-on: ubuntu-latest
    env:
      START_DATE: "2025-08-18"                           # Week 1 Monday
      BASE_URL: "https://bryceas44.github.io/physical-program/"
    steps:
      - name: Compute current week number 1–16
        id: calc
        run: |
          start=$(date -u -d "$START_DATE" +%s)
          today=$(date -u +%s)
          diff=$(( (today - start) / 86400 ))
          week=$(( diff / 7 + 1 ))
          if [ $week -lt 1 ]; then week=1; fi
          if [ $week -gt 16 ]; then week=16; fi
          echo "week=$week" >> $GITHUB_OUTPUT
          echo "Computed week: $week"

      - name: Encode selector "#week-N"
        id: enc
        env:
          RAW_SELECTOR: "#week-${{ steps.calc.outputs.week }}"
        run: |
          ENCODED=$(python3 - <<'PY'
import os, urllib.parse
print(urllib.parse.quote(os.environ["RAW_SELECTOR"]))
PY
)
          echo "encoded=$ENCODED" >> $GITHUB_OUTPUT
          echo "Selector encoded."

      - name: Screenshot (selector, first try 5s delay)
        continue-on-error: true
        run: |
          curl -sSL "https://shot.screenshotapi.net/screenshot\
?token=${{ secrets.SCREENSHOTAPI_TOKEN }}\
&url=${{ env.BASE_URL }}\
&output=image\
&file_type=png\
&selector=${{ steps.enc.outputs.encoded }}\
&fresh=true\
&delay=5000\
&viewport=1440x2200\
&device_scale_factor=2" \
            --output "week-${{ steps.calc.outputs.week }}.png"

          BYTES=$(stat -c%s "week-${{ steps.calc.outputs.week }}.png" 2>/dev/null || echo 0)
          echo "First attempt size: $BYTES bytes" | tee size1.txt

      - name: Retry selector (longer delay) if tiny
        if: ${{ always() }}
        run: |
          BYTES=$(cat size1.txt | awk '{print $4}')
          if [ -z "$BYTES" ] || [ "$BYTES" -lt 50000 ]; then
            echo "Retrying with 8s delay..."
            curl -sSL "https://shot.screenshotapi.net/screenshot\
?token=${{ secrets.SCREENSHOTAPI_TOKEN }}\
&url=${{ env.BASE_URL }}\
&output=image\
&file_type=png\
&selector=${{ steps.enc.outputs.encoded }}\
&fresh=true\
&delay=8000\
&viewport=1440x2200\
&device_scale_factor=2" \
              --output "week-${{ steps.calc.outputs.week }}.png"
          else
            echo "Retry not needed."
          fi

      - name: Fallback to FULL PAGE if selector still tiny
        run: |
          BYTES=$(stat -c%s "week-${{ steps.calc.outputs.week }}.png" 2>/dev/null || echo 0)
          if [ -z "$BYTES" ] || [ "$BYTES" -lt 50000 ]; then
            echo "Selector capture still small ($BYTES bytes). Using full page fallback..."
            curl -sSL "https://shot.screenshotapi.net/screenshot\
?token=${{ secrets.SCREENSHOTAPI_TOKEN }}\
&url=${{ env.BASE_URL }}\
&output=image\
&file_type=png\
&full_page=true\
&fresh=true\
&delay=8000\
&viewport=1440x2200\
&device_scale_factor=2" \
              --output "week-${{ steps.calc.outputs.week }}.png"
          fi
          echo "Final image size: $(stat -c%s week-${{ steps.calc.outputs.week }}.png) bytes"

      - name: Post PNG to Discord
        run: |
          curl -F "file1=@week-${{ steps.calc.outputs.week }}.png" \
               -F "payload_json={\"content\":\"Week ${{ steps.calc.outputs.week }} ✅\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}

      - name: Upload artifact (debug/verify)
        uses: actions/upload-artifact@v4
        with:
          name: week-${{ steps.calc.outputs.week }}.png
          path: week-${{ steps.calc.outputs.week }}.png
          retention-days: 7
